CREATE TABLE IF NOT EXISTS MEMBER -- Aggregate Root
(
    id        BIGINT AUTO_INCREMENT,
    nickname  VARCHAR(30) NOT NULL COMMENT '회원 별명',
    createdAt TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS MOVIE  -- Aggregate Root
(
    id          BIGINT AUTO_INCREMENT COMMENT '영화 ID',
    title       VARCHAR(255) NOT NULL COMMENT '영화 제목',
    description VARCHAR(255) NOT NULL COMMENT '영화 설명',
    releaseDate date         NOT NULL COMMENT '영화 개봉일',
    duration    INT          NOT NULL COMMENT '영화 상영시간',
    createdAt   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt   TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);
CREATE INDEX IDX_MOVIE_RELEASE_DATE ON MOVIE (releaseDate);

CREATE TABLE IF NOT EXISTS CINEMA  -- Aggregate Root
(
    id        BIGINT AUTO_INCREMENT COMMENT '영화관 ID',
    name      VARCHAR(255) NOT NULL COMMENT '영화관 이름',
    createdAt TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS SCREEN -- CINEMA.Entity
(
    id        BIGINT AUTO_INCREMENT COMMENT '상영관 ID',
    cinemaId  BIGINT       NOT NULL COMMENT '영화관 ID',
    name      VARCHAR(255) NOT NULL COMMENT '상영관 이름',
    createdAt TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS IDX_SCREEN_CINEMA_ID ON SCREEN (cinemaId);

CREATE TABLE IF NOT EXISTS SEAT -- SCREEN.Entity
(
    id        BIGINT AUTO_INCREMENT COMMENT '좌석 ID',
    screenId  BIGINT      NOT NULL COMMENT '상영관 ID',
    rowName   VARCHAR(10) NOT NULL COMMENT '좌석 행 (A-Z)',
    colNum    INT         NOT NULL COMMENT '좌석 열 (1-20)',
    createdAt TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE (screenId, rowName, colNum)
);
CREATE INDEX IF NOT EXISTS IDX_SEAT_SCREEN_ID ON SEAT (screenId);
CREATE INDEX IF NOT EXISTS IDX_SEAT_ROW_NUM ON SEAT (rowName);


CREATE TABLE IF NOT EXISTS SCREENING  -- Aggregate Root
(
    id         BIGINT AUTO_INCREMENT COMMENT '상영 ID',
    screenId   BIGINT    NOT NULL COMMENT '상영관 ID',
    movieId    BIGINT    NOT NULL COMMENT '영화 ID',
    screenDate DATE      NOT NULL COMMENT '상영 일자',
    startTime  TIME      NOT NULL COMMENT '상영 시작 시간',
    endTime    TIME      NOT NULL COMMENT '상영 종료 시간',
    createdAt  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE (screenId, movieId, screenDate, startTime)
);
CREATE INDEX IF NOT EXISTS IDX_SCREENING_SCREEN_ID ON SCREENING (screenId);
CREATE INDEX IF NOT EXISTS IDX_SCREENING_MOVIE_ID ON SCREENING (movieId);


CREATE TABLE IF NOT EXISTS SCREENING_SEAT -- SCREENING.Entity
(
    id          BIGINT AUTO_INCREMENT COMMENT '상영 좌석 ID',
    screeningId BIGINT      NOT NULL COMMENT '상영 ID',
    seatId      BIGINT      NOT NULL COMMENT '좌석 ID',
    status      VARCHAR(40) NOT NULL DEFAULT 'AVAILABLE' COMMENT 'AVAILABLE, RESERVED, SOLD',
    createdAt   TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt   TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    version     BIGINT      NOT NULL DEFAULT 1 COMMENT '충돌방지 목적',
    PRIMARY KEY (id),
    UNIQUE (screeningId, seatId)
);
CREATE INDEX IF NOT EXISTS IDX_SCREENING_SEAT_SCREENING_ID ON SCREENING_SEAT (screeningId);
CREATE INDEX IF NOT EXISTS IDX_SCREENING_SEAT_SEAT_ID ON SCREENING_SEAT (seatId);
CREATE INDEX IF NOT EXISTS IDX_SCREENING_SEAT_STATUS ON SCREENING_SEAT (status);

CREATE TABLE IF NOT EXISTS BOOKING -- Aggregate Root
(
    id         BIGINT AUTO_INCREMENT COMMENT '예매 ID',
    memberId   BIGINT    NOT NULL COMMENT '회원 ID',
    paymentId  BIGINT             DEFAULT NULL COMMENT '결제 ID',
    status     VARCHAR(40)        DEFAULT 'RESERVED' COMMENT 'RESERVED, CANCELLED',
    reservedAt TIMESTAMP          DEFAULT CURRENT_TIMESTAMP NOT NULL COMMENT '예매 일시',
    createdAt  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);
CREATE INDEX IF NOT EXISTS IDX_BOOKING_MEMBER_ID ON BOOKING (memberId);
CREATE INDEX IF NOT EXISTS IDX_BOOKING_STATUS ON BOOKING (status);

CREATE TABLE IF NOT EXISTS BOOKING_ITEM -- BOOKING.Entity
(
    bookingId       BIGINT    NOT NULL COMMENT '예매 ID',
    screeningSeatId BIGINT    NOT NULL COMMENT '상영 좌석 ID',
    createdAt       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (bookingId, screeningSeatId)
);

CREATE TABLE IF NOT EXISTS PAYMENT -- Aggregate Root
(
    id                     BIGINT AUTO_INCREMENT COMMENT '결제 ID',
    memberId               BIGINT      NOT NULL COMMENT '회원 ID',
    transactionReferenceId BIGINT      NOT NULL COMMENT '거래 참조 ID (예매 ID)',
    status                 VARCHAR(40) NOT NULL DEFAULT 'PAID' NOT NULL COMMENT 'PAID, CANCELLED',
    paidAt                 TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    cancelledAt            TIMESTAMP,
    createdAt              TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt              TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE INDEX IF NOT EXISTS IDX_PAYMENT_MEMBER_ID ON PAYMENT (memberId);
CREATE INDEX IF NOT EXISTS IDX_PAYMENT_TRANSACTION_REFERENCE_ID ON PAYMENT (transactionReferenceId);
CREATE INDEX IF NOT EXISTS IDX_PAYMENT_STATUS ON PAYMENT (status);